;Font file for ASCII chars 32-128

font:
;special chars
.db $00,$80,$00,$80,$00,$80,$00,$aa ; spr0  raster
.db $18,$18,$18,$1f,$1f,$18,$18,$18 ; spr1  T-left
.db $18,$18,$18,$f8,$f8,$18,$18,$18 ; spr2  T-right
.db $00,$00,$00,$ff,$ff,$00,$00,$00 ; spr3  line hor
.db $18,$18,$18,$f8,$f8,$00,$00,$00 ; spr4  corner rb
.db $00,$00,$00,$1f,$1f,$18,$18,$18 ; spr5  corner lt
.db $00,$00,$00,$f8,$f8,$18,$18,$18 ; spr6  corner rt
.db $18,$18,$18,$1f,$1f,$00,$00,$00 ; spr7  corner lb
.db $18,$18,$18,$18,$18,$18,$18,$18 ; spr8  line ver
.db $ff,$fb,$f9,$80,$f9,$fb,$ff,$ff ; spr9  arrow right
.db $ff,$ef,$cf,$80,$cf,$ef,$ff,$ff ; spr10 arrow left
.db $10,$38,$7c,$10,$10,$10,$10,$00 ; spr11 arrow up
.db $ff,$ff,$c3,$df,$c7,$df,$c3,$ff ; spr12 enemie
.db $08,$1c,$3e,$00,$00,$3e,$1c,$08 ; spr13 up-down
.db $ff,$ff,$e7,$db,$db,$db,$e7,$ff ; spr14 inv 0
.db $ff,$ff,$e7,$f7,$f7,$f7,$f7,$ff ; spr15 inv 1
.db $ff,$ff,$e7,$db,$f7,$ef,$c3,$ff ; spr16 inv 2
.db $ff,$ff,$c7,$fb,$f7,$fb,$c7,$ff ; spr17 inv 3
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr18
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr19
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr20
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr21
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr22
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr23
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr24
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr25
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr26
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr27
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr28
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr29
.db $00,$00,$00,$00,$00,$00,$00,$00 ; spr30
.db $00,$98,$18,$fe,$7e,$98,$18,$aa ; spr31 cross

;ascii chars
.db $00,$00,$00,$00,$00,$00,$00,$00 ; space 
.db $30,$78,$78,$78,$30,$00,$30,$00 ; !
.db $6C,$6C,$6C,$00,$00,$00,$00,$00 ; "
.db $6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
.db $30,$7C,$C0,$78,$0C,$F8,$30,$00 ; $
.db $00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
.db $38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
.db $60,$60,$00,$00,$00,$00,$00,$00 ; '
.db $18,$30,$60,$60,$60,$30,$18,$00 ; (
.db $60,$30,$18,$18,$18,$30,$60,$00 ; )
.db $00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
.db $00,$30,$30,$FC,$30,$30,$00,$00 ; +
.db $00,$00,$00,$00,$00,$30,$30,$60 ; ,
.db $00,$00,$00,$FC,$00,$00,$00,$00 ; -
.db $00,$00,$00,$00,$00,$30,$30,$00 ; .
.db $06,$0C,$18,$30,$60,$C0,$80,$00 ; /

livenum:
.db $3E,$71,$71,$71,$71,$71,$3E,$00 ; 0
.db $3C,$1C,$1C,$1C,$1C,$1C,$1C,$00 ; 1
.db $7E,$07,$07,$3E,$70,$70,$7F,$00 ; 2
.db $3E,$47,$07,$1E,$07,$47,$3E,$00 ; 3
.db $1E,$2E,$4E,$4E,$4E,$7F,$0E,$00 ; 4
.db $7F,$70,$70,$7E,$07,$07,$7E,$00 ; 5
.db $3F,$70,$70,$7E,$47,$47,$3E,$00 ; 6
.db $7F,$47,$0E,$0E,$1C,$1C,$1C,$00 ; 7
.db $3E,$71,$71,$3E,$47,$47,$3E,$00 ; 8
.db $3E,$71,$71,$3F,$07,$07,$7E,$00 ; 9
.db $00,$30,$30,$00,$00,$30,$30,$00 ; :
.db $00,$30,$30,$00,$00,$30,$30,$60 ; ;
.db $18,$30,$60,$C0,$60,$30,$18,$00 ; <
.db $00,$00,$FC,$00,$00,$FC,$00,$00 ; =
.db $60,$30,$18,$0C,$18,$30,$60,$00 ; >
.db $78,$CC,$0C,$18,$30,$00,$30,$00 ; ?
.db $7C,$C6,$DE,$DE,$DE,$C0,$78,$00 ; @
.db $3E,$47,$47,$47,$7F,$47,$47,$00 ; A
.db $7E,$71,$71,$7E,$71,$71,$7E,$00 ; B
.db $3F,$70,$70,$70,$70,$70,$3F,$00 ; C
.db $7E,$47,$47,$47,$47,$47,$7E,$00 ; D
.db $7F,$70,$70,$7F,$70,$70,$7F,$00 ; E
.db $7F,$70,$70,$7F,$70,$70,$70,$00 ; F
.db $3E,$47,$40,$5F,$47,$47,$3E,$00 ; G
.db $71,$71,$71,$7F,$71,$71,$71,$00 ; H
.db $1C,$1C,$1C,$1C,$1C,$1C,$1C,$00 ; I
.db $1C,$1C,$1C,$1C,$1C,$1C,$78,$00 ; J
.db $71,$72,$74,$7C,$4E,$47,$47,$00 ; K
.db $70,$70,$70,$70,$70,$70,$7F,$00 ; L
.db $7E,$5B,$5B,$5B,$5B,$5B,$5B,$00 ; M
.db $7E,$47,$47,$47,$47,$47,$47,$00 ; N
.db $3E,$71,$71,$71,$71,$71,$3E,$00 ; O
.db $7E,$71,$71,$71,$7E,$70,$70,$00 ; P
.db $3E,$71,$71,$71,$73,$73,$3F,$00 ; Q
.db $7E,$71,$71,$7E,$47,$47,$47,$00 ; R
.db $3E,$71,$70,$3E,$07,$47,$3E,$00 ; S
.db $7F,$1C,$1C,$1C,$1C,$1C,$1C,$00 ; T
.db $71,$71,$71,$71,$71,$71,$3E,$00 ; U
.db $71,$71,$71,$71,$3E,$1C,$08,$00 ; V
.db $6D,$6D,$6D,$6D,$6D,$6D,$3E,$00 ; W
.db $71,$72,$3C,$1C,$1E,$27,$47,$00 ; X
.db $71,$71,$71,$3E,$1C,$1C,$1C,$00 ; Y
.db $7F,$07,$0E,$1C,$38,$70,$7F,$00 ; Z
.db $78,$60,$60,$60,$60,$60,$78,$00 ; [
.db $C0,$60,$30,$18,$0C,$06,$02,$00 ; \
.db $78,$18,$18,$18,$18,$18,$78,$00 ; ]
.db $10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
.db $18,$18,$18,$18,$18,$18,$18,$18 ; _=|
;.db $30,$30,$18,$00,$00,$00,$00,$00 ; `
;.db $00,$00,$3E,$06,$3E,$26,$3E,$00 ; a
;.db $30,$30,$3E,$26,$26,$26,$3E,$00 ; b
;.db $00,$00,$3E,$30,$30,$30,$3E,$00 ; c
;.db $06,$06,$3E,$26,$26,$26,$3E,$00 ; d
;.db $00,$00,$3E,$26,$3E,$20,$3E,$00 ; e
;.db $1C,$10,$3E,$18,$18,$18,$18,$00 ; f
;.db $00,$00,$3E,$34,$34,$1E,$26,$3E ; g
;.db $30,$30,$3E,$26,$26,$26,$26,$00 ; h
;.db $0C,$00,$0C,$0C,$0C,$0C,$0C,$00 ; i
;.db $0C,$00,$0C,$0C,$0C,$0C,$04,$1C ; j
;.db $30,$30,$32,$34,$3C,$26,$26,$00 ; k
;.db $0C,$0C,$0C,$0C,$0C,$0C,$0C,$00 ; l
;.db $00,$00,$7F,$5B,$5B,$5B,$5B,$00 ; m
;.db $00,$00,$3E,$26,$26,$26,$26,$00 ; n
;.db $00,$00,$3E,$26,$26,$26,$3E,$00 ; o
;.db $00,$00,$3E,$32,$32,$32,$3E,$30 ; p
;.db $00,$00,$3E,$32,$32,$32,$3E,$06 ; q
;.db $00,$00,$34,$38,$30,$30,$30,$00 ; r
;.db $00,$00,$3E,$30,$3E,$06,$3E,$00 ; s
;.db $04,$04,$3E,$0C,$0C,$0C,$0C,$00 ; t
;.db $00,$00,$32,$32,$32,$32,$3E,$00 ; u
;.db $00,$00,$32,$32,$32,$1C,$08,$00 ; v
;.db $00,$00,$6D,$6D,$6D,$6D,$7F,$00 ; w
;.db $00,$00,$32,$34,$1C,$16,$26,$00 ; x
;.db $00,$00,$32,$32,$32,$32,$3E,$06 ; y
;.db $00,$00,$3E,$0E,$1C,$38,$3E,$00 ; z
;.db $1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
;.db $18,$18,$18,$18,$18,$18,$18,$18 ; |
;.db $E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
;.db $00,$00,$00,$00,$00,$00,$00,$00 ; ~
;.db $00,$00,$00,$00,$00,$00,$00,$00 ; 

;======================================================================
;FONT ROUTINES:
;======================================================================
;PUTSTRING
; - x,y,string,0
; - x,y,string,0
; - $ea
;
;PUTCHAR x,y,a
;======================================================================
XPOS     equ $70
YPOS     equ $71

PUTSTRING:
    pla            ; Save return address
    sta $e8
    pla
    sta $e9

    ldy #$0
P_S_0:
    jsr PTR_INC    ; Point to character string
    lda ($e8),y    ; Check end of printing
    bmi P_S_4

P_S_1:
    sta XPOS       ; Save x,y,attribute
    jsr PTR_INC
    lda ($e8),y
    sta YPOS

P_S_2:
    jsr PTR_INC    ; Print character until 0
    lda ($e8),y
    beq P_S_0
    jsr PRINTCHAR
    inc XPOS
    jmp P_S_2

P_S_4:
    jmp ($e8)      ; Return to program

PTR_INC:           ; Increment textpointer
    inc $e8
    bne PTR_1
    inc $e9
PTR_1:
    rts

;----------------------------------------------------------------------
SCR      equ $73
CHR      equ $75
TMP_Y    equ $77

PUTCHAR:
    stx XPOS
    sty YPOS

PRINTCHAR:
    sta CHR        ; Calculate characterspritedata address
    lda #0         ; = A * 8 + charsprite data address
    sta CHR+1
    asl CHR
    rol CHR+1
    asl CHR
    rol CHR+1
    asl CHR
    rol CHR+1
    lda CHR
    clc
    adc #<font
    sta CHR
    lda CHR+1
    adc #>font
    sta CHR+1
    
    lda XPOS       ; Calculate screenaddress
    sta SCR
    lda YPOS
    clc
    adc #$80
    sta SCR+1
 
    sty TMP_Y
    ldx #0
    ldy #0         ; Put character on screen
P_C_1:
    lda (CHR),y
;    eor (SCR),y
    sta (SCR),y
    inc CHR
    bne P_C_2
    inc CHR+1
P_C_2:
    lda SCR
    clc
    adc #$20
    sta SCR
    lda SCR+1
    adc #0
    sta SCR+1
    inx
    cpx #8
    bne P_C_1

    ldy TMP_Y
    rts
 
INV_CURSOR:
    stx SCR
    tya
    clc
    adc #$80
    sta SCR+1
 
    ldy #0         ; Put character on screen
IC1:
    lda (SCR),y
    eor #$ff
    sta (SCR),y
    tya
    clc
    adc #$20
    tay
    bne IC1
    rts    